/* [fkelava 9/5/23 23:37]
 * source: MS Store ver.
 * header: __BATTLE_ATEL__
 *
 * /ffx_ps2/ffx2/master/jppc/battle/header/btlhead.src
 *
 * Partial. Many constants yet to come along with other stuff.
 */

namespace Fahrenheit.Core.FFX2.Ids;

public static class ChrStatId {
    public const T_X2ChrStatId STAT_NOP                       =   0; // なし
    public const T_X2ChrStatId STAT_HP                        =   1; // ＨＰ
    public const T_X2ChrStatId STAT_MP                        =   2; // ＭＰ
    public const T_X2ChrStatId STAT_MAXHP                     =   3; // 最大ＨＰ
    public const T_X2ChrStatId STAT_MAXMP                     =   4; // 最大ＭＰ
    public const T_X2ChrStatId STAT_WEAK                      =   5; // 弱り
    public const T_X2ChrStatId STAT_INBATTLE                  =   6; // バトルに出ているフラグ
    public const T_X2ChrStatId STAT_MAN                       =   7; // 男フラグ
    public const T_X2ChrStatId STAT_FEMALE                    =   8; // 女フラグ
    public const T_X2ChrStatId STAT_MONSTER                   =   9; // モンスターフラグ
    public const T_X2ChrStatId STAT_FLY                       =  10; // 飛んでるフラグ
    public const T_X2ChrStatId STAT_STR                       =  11; // 力
    public const T_X2ChrStatId STAT_VIT                       =  12; // 体力
    public const T_X2ChrStatId STAT_MAG                       =  13; // 魔力
    public const T_X2ChrStatId STAT_SPIRIT                    =  14; // 精神
    public const T_X2ChrStatId STAT_DEX                       =  15; // すばやさ
    public const T_X2ChrStatId STAT_LUCK                      =  16; // 運
    public const T_X2ChrStatId STAT_AVOID                     =  17; // 回避率
    public const T_X2ChrStatId STAT_HIT                       =  18; // 命中率
    public const T_X2ChrStatId STAT_STR_ADJUST                =  19; // 力：調整値
    public const T_X2ChrStatId STAT_VIT_ADJUST                =  20; // 体力：調整値
    public const T_X2ChrStatId STAT_MAG_ADJUST                =  21; // 魔力：調整値
    public const T_X2ChrStatId STAT_SPIRIT_ADJUST             =  22; // 精神：調整値
    public const T_X2ChrStatId STAT_DEX_ADJUST                =  23; // すばやさ：調整値
    public const T_X2ChrStatId STAT_LUCK_ADJUST               =  24; // 運：調整値
    public const T_X2ChrStatId STAT_AVOID_ADJUST              =  25; // 回避率：調整値
    public const T_X2ChrStatId STAT_HIT_ADJUST                =  26; // 命中率：調整値
    public const T_X2ChrStatId STAT_ABS_FIRE                  =  27; // 吸収属性 炎
    public const T_X2ChrStatId STAT_ABS_COLD                  =  28; // 吸収属性 冷気
    public const T_X2ChrStatId STAT_ABS_THUNDER               =  29; // 吸収属性 雷
    public const T_X2ChrStatId STAT_ABS_WATER                 =  30; // 吸収属性 水
    public const T_X2ChrStatId STAT_ABS_HOLY                  =  31; // 吸収属性 聖
    public const T_X2ChrStatId STAT_ABS_GRAVITY               =  32; // 吸収属性 重力
    public const T_X2ChrStatId STAT_INV_FIRE                  =  33; // 無効属性 炎
    public const T_X2ChrStatId STAT_INV_COLD                  =  34; // 無効属性 冷気
    public const T_X2ChrStatId STAT_INV_THUNDER               =  35; // 無効属性 雷
    public const T_X2ChrStatId STAT_INV_WATER                 =  36; // 無効属性 水
    public const T_X2ChrStatId STAT_INV_HOLY                  =  37; // 無効属性 聖
    public const T_X2ChrStatId STAT_INV_GRAVITY               =  38; // 無効属性 重力
    public const T_X2ChrStatId STAT_HALF_FIRE                 =  39; // 半減属性 炎
    public const T_X2ChrStatId STAT_HALF_COLD                 =  40; // 半減属性 冷気
    public const T_X2ChrStatId STAT_HALF_THUNDER              =  41; // 半減属性 雷
    public const T_X2ChrStatId STAT_HALF_WATER                =  42; // 半減属性 水
    public const T_X2ChrStatId STAT_HALF_HOLY                 =  43; // 半減属性 聖
    public const T_X2ChrStatId STAT_HALF_GRAVITY              =  44; // 半減属性 重力
    public const T_X2ChrStatId STAT_WEAK_FIRE                 =  45; // 弱点属性 炎
    public const T_X2ChrStatId STAT_WEAK_COLD                 =  46; // 弱点属性 冷気
    public const T_X2ChrStatId STAT_WEAK_THUNDER              =  47; // 弱点属性 雷
    public const T_X2ChrStatId STAT_WEAK_WATER                =  48; // 弱点属性 水
    public const T_X2ChrStatId STAT_WEAK_HOLY                 =  49; // 弱点属性 聖
    public const T_X2ChrStatId STAT_WEAK_GRAVITY              =  50; // 弱点属性 重力
    public const T_X2ChrStatId STAT_POISON_PER                =  51; // 毒ダメージ割合
    public const T_X2ChrStatId STAT_AREA                      =  52; // 立ち位置エリア
    public const T_X2ChrStatId STAT_POS                       =  53; // 立ち位置番号
    public const T_X2ChrStatId STAT_GROUP                     =  54; // グループフラグ
    public const T_X2ChrStatId STAT_ALIVE                     =  55; // 戦闘可能
    public const T_X2ChrStatId STAT_STONE                     =  56; // 石化
    public const T_X2ChrStatId STAT_SLEEP                     =  57; // 睡眠
    public const T_X2ChrStatId STAT_SILENCE                   =  58; // 沈黙
    public const T_X2ChrStatId STAT_DARK                      =  59; // 暗闇
    public const T_X2ChrStatId STAT_POISON                    =  60; // 毒
    public const T_X2ChrStatId STAT_CONFUSE                   =  61; // こんらん
    public const T_X2ChrStatId STAT_BERSERK                   =  62; // バーサク
    public const T_X2ChrStatId STAT_CURSE                     =  63; // カーズ
    public const T_X2ChrStatId STAT_DEFENSE                   =  64; // ぼうぎょ
    public const T_X2ChrStatId STAT_BLOW                      =  65; // 吹き飛ばし
    public const T_X2ChrStatId STAT_HP_DOUBLE                 =  66; // ＨＰ２倍
    public const T_X2ChrStatId STAT_MP_DOUBLE                 =  67; // ＭＰ２倍
    public const T_X2ChrStatId STAT_USE_MP0                   =  68; // 消費ＭＰ０
    public const T_X2ChrStatId STAT_DAMAGE9999                =  69; // ダメージ９９９９
    public const T_X2ChrStatId STAT_ABS_CRITICAL              =  70; // 絶対クリティカル
    public const T_X2ChrStatId STAT_EXP0                      =  71; // 経験値０
    public const T_X2ChrStatId STAT_CHANGE_CLOTH              =  72; // 着替えたい
    public const T_X2ChrStatId STAT_RELIFE                    =  73; // リレイズ
    public const T_X2ChrStatId STAT_SHELL                     =  74; // シェル
    public const T_X2ChrStatId STAT_PROTESS                   =  75; // プロテス
    public const T_X2ChrStatId STAT_REFLECT                   =  76; // リフレク
    public const T_X2ChrStatId STAT_REGEN                     =  77; // リジェネ
    public const T_X2ChrStatId STAT_HASTE                     =  78; // へイスト
    public const T_X2ChrStatId STAT_SLOW                      =  79; // スロウ
    public const T_X2ChrStatId STAT_STOP                      =  80; // ストップ
    public const T_X2ChrStatId STAT_STR_CHANGE                =  81; // 攻撃調整
    public const T_X2ChrStatId STAT_MAG_CHANGE                =  82; // 魔法調整
    public const T_X2ChrStatId STAT_VIT_CHANGE                =  83; // 防御調整
    public const T_X2ChrStatId STAT_SPIRIT_CHANGE             =  84; // 魔法防御調整
    public const T_X2ChrStatId STAT_HIT_CHANGE                =  85; // 命中アップ調整
    public const T_X2ChrStatId STAT_LUCK_CHANGE               =  86; // 運アップ調整
    public const T_X2ChrStatId STAT_DEATH_SENTENCE            =  87; // 死の宣告
    public const T_X2ChrStatId STAT_INVINCIBLE_PHYSIC         =  88; // 物理無効
    public const T_X2ChrStatId STAT_INVINCIBLE_MAGIC          =  89; // 魔法無効
    public const T_X2ChrStatId STAT_INVINCIBLE                =  90; // 無敵
    public const T_X2ChrStatId STAT_AUTO_ALIVE                =  91; // 戦闘可能
    public const T_X2ChrStatId STAT_AUTO_STONE                =  92; // 石化
    public const T_X2ChrStatId STAT_AUTO_SLEEP                =  93; // 睡眠
    public const T_X2ChrStatId STAT_AUTO_SILENCE              =  94; // 沈黙
    public const T_X2ChrStatId STAT_AUTO_DARK                 =  95; // 暗闇
    public const T_X2ChrStatId STAT_AUTO_POISON               =  96; // 毒
    public const T_X2ChrStatId STAT_AUTO_CONFUSE              =  97; // こんらん
    public const T_X2ChrStatId STAT_AUTO_BERSERK              =  98; // バーサク
    public const T_X2ChrStatId STAT_AUTO_CURSE                =  99; // カーズ
    public const T_X2ChrStatId STAT_AUTO_DEFENSE              = 100; // ぼうぎょ
    public const T_X2ChrStatId STAT_AUTO_BLOW                 = 101; // 吹き飛ばし
    public const T_X2ChrStatId STAT_AUTO_HP_DOUBLE            = 102; // ＨＰ２倍
    public const T_X2ChrStatId STAT_AUTO_MP_DOUBLE            = 103; // ＭＰ２倍
    public const T_X2ChrStatId STAT_AUTO_USE_MP0              = 104; // 消費ＭＰ０
    public const T_X2ChrStatId STAT_AUTO_DAMAGE9999           = 105; // ダメージ９９９９
    public const T_X2ChrStatId STAT_AUTO_ABS_CRITICAL         = 106; // 絶対クリティカル
    public const T_X2ChrStatId STAT_AUTO_EXP0                 = 107; // 経験値０
    public const T_X2ChrStatId STAT_AUTO_CHANGE_CLOTH         = 108; // 着替えたい
    public const T_X2ChrStatId STAT_AUTO_RELIFE               = 109; // リレイズ
    public const T_X2ChrStatId STAT_AUTO_SHELL                = 110; // シェル
    public const T_X2ChrStatId STAT_AUTO_PROTESS              = 111; // プロテス
    public const T_X2ChrStatId STAT_AUTO_REFLECT              = 112; // リフレク
    public const T_X2ChrStatId STAT_AUTO_REGEN                = 113; // リジェネ
    public const T_X2ChrStatId STAT_AUTO_HASTE                = 114; // へイスト
    public const T_X2ChrStatId STAT_AUTO_SLOW                 = 115; // スロウ
    public const T_X2ChrStatId STAT_AUTO_STOP                 = 116; // ストップ
    public const T_X2ChrStatId STAT_AUTO_STR_CHANGE           = 117; // 攻撃調整
    public const T_X2ChrStatId STAT_AUTO_MAG_CHANGE           = 118; // 魔法調整
    public const T_X2ChrStatId STAT_AUTO_VIT_CHANGE           = 119; // 防御調整
    public const T_X2ChrStatId STAT_AUTO_SPIRIT_CHANGE        = 120; // 魔法防御調整
    public const T_X2ChrStatId STAT_AUTO_HIT_CHANGE           = 121; // 命中アップ調整
    public const T_X2ChrStatId STAT_AUTO_LUCK_CHANGE          = 122; // 運アップ調整
    public const T_X2ChrStatId STAT_AUTO_DEATH_SENTENCE       = 123; // 死の宣告
    public const T_X2ChrStatId STAT_AUTO_INVINCIBLE_PHYSIC    = 124; // 物理無効
    public const T_X2ChrStatId STAT_AUTO_INVINCIBLE_MAGIC     = 125; // 魔法無効
    public const T_X2ChrStatId STAT_AUTO_INVINCIBLE           = 126; // 無敵
    public const T_X2ChrStatId STAT_DEF_DEATH                 = 127; // 防御:戦闘不能
    public const T_X2ChrStatId STAT_DEF_STONE                 = 128; // 防御:石化
    public const T_X2ChrStatId STAT_DEF_SLEEP                 = 129; // 防御:睡眠
    public const T_X2ChrStatId STAT_DEF_SILENCE               = 130; // 防御:沈黙
    public const T_X2ChrStatId STAT_DEF_DARK                  = 131; // 防御:暗闇
    public const T_X2ChrStatId STAT_DEF_POISON                = 132; // 防御:毒
    public const T_X2ChrStatId STAT_DEF_CONFUSE               = 133; // 防御:こんらん
    public const T_X2ChrStatId STAT_DEF_BERSERK               = 134; // 防御:バーサク
    public const T_X2ChrStatId STAT_DEF_CURSE                 = 135; // 防御:カーズ
    public const T_X2ChrStatId STAT_DEF_DEFENSE               = 136; // 防御:ぼうぎょ
    public const T_X2ChrStatId STAT_DEF_BLOW                  = 137; // 防御:吹き飛ばし
    public const T_X2ChrStatId STAT_DEF_HP_DOUBLE             = 138; // 防御:ＨＰ２倍
    public const T_X2ChrStatId STAT_DEF_MP_DOUBLE             = 139; // 防御:ＭＰ２倍
    public const T_X2ChrStatId STAT_DEF_USE_MP0               = 140; // 防御:消費ＭＰ０
    public const T_X2ChrStatId STAT_DEF_DAMAGE9999            = 141; // 防御:ダメージ９９９９
    public const T_X2ChrStatId STAT_DEF_ABS_CRITICAL          = 142; // 防御:絶対クリティカル
    public const T_X2ChrStatId STAT_DEF_EXP0                  = 143; // 防御:経験値０
    public const T_X2ChrStatId STAT_DEF_CHANGE_CLOTH          = 144; // 防御:着替えたい
    public const T_X2ChrStatId STAT_DEF_RELIFE                = 145; // 防御:リレイズ
    public const T_X2ChrStatId STAT_DEF_SHELL                 = 146; // 防御:シェル
    public const T_X2ChrStatId STAT_DEF_PROTESS               = 147; // 防御:プロテス
    public const T_X2ChrStatId STAT_DEF_REFLECT               = 148; // 防御:リフレク
    public const T_X2ChrStatId STAT_DEF_REGEN                 = 149; // 防御:リジェネ
    public const T_X2ChrStatId STAT_DEF_HASTE                 = 150; // 防御:へイスト
    public const T_X2ChrStatId STAT_DEF_SLOW                  = 151; // 防御:スロウ
    public const T_X2ChrStatId STAT_DEF_STOP                  = 152; // 防御:ストップ
    public const T_X2ChrStatId STAT_DEF_STR_CHANGE            = 153; // 防御:攻撃調整
    public const T_X2ChrStatId STAT_DEF_MAG_CHANGE            = 154; // 防御:魔法調整
    public const T_X2ChrStatId STAT_DEF_VIT_CHANGE            = 155; // 防御:防御調整
    public const T_X2ChrStatId STAT_DEF_SPIRIT_CHANGE         = 156; // 防御:魔法防御調整
    public const T_X2ChrStatId STAT_DEF_HIT_CHANGE            = 157; // 防御:命中調整
    public const T_X2ChrStatId STAT_DEF_LUCK_CHANGE           = 158; // 防御:運調整
    public const T_X2ChrStatId STAT_DEF_DEATH_SENTENCE        = 159; // 防御:死の宣告
    public const T_X2ChrStatId STAT_DEF_INVINCIBLE_PHYSIC     = 160; // 防御:物理無効
    public const T_X2ChrStatId STAT_DEF_INVINCIBLE_MAGIC      = 161; // 防御:魔法無効
    public const T_X2ChrStatId STAT_DEF_INVINCIBLE            = 162; // 防御:無敵
    public const T_X2ChrStatId STAT_SP_MAGIC_CANCEL           = 163; // 魔法キャンセル不可
    public const T_X2ChrStatId STAT_SP_WAIRO                  = 164; // わいろ不可
    public const T_X2ChrStatId STAT_SP_DISABLE_ZAN            = 165; // 斬魔刀で切れないフラグ
    public const T_X2ChrStatId STAT_SP_INVINCIBLE             = 166; // 無敵
    public const T_X2ChrStatId STAT_SP_INV_MAGIC              = 167; // 魔法無効
    public const T_X2ChrStatId STAT_SP_INV_PHYSIC             = 168; // 物理無効
    public const T_X2ChrStatId STAT_SP_INV_ATB                = 169; // ATB 無効
    public const T_X2ChrStatId STAT_SP_LIVE                   = 170; // ライブラフラグ
    public const T_X2ChrStatId STAT_SP_RATIO                  = 171; // 割合ダメージフラグ
    public const T_X2ChrStatId STAT_SP_DAMAGE_NOT_STOP        = 172; // ダメージ時に時間が止まらないフラグ
    public const T_X2ChrStatId STAT_EXP                       = 173; // 獲得：経験値
    public const T_X2ChrStatId STAT_GET_AP                    = 174; // 獲得：ＡＰ
    public const T_X2ChrStatId STAT_GILL                      = 175; // 獲得：ギル
    public const T_X2ChrStatId STAT_STEAL_GILL                = 176; // 盗むギル
    public const T_X2ChrStatId STAT_DROP                      = 177; // 通常アイテム落とす確率
    public const T_X2ChrStatId STAT_STEAL                     = 178; // 盗む確率
    public const T_X2ChrStatId STAT_STEAL_COUNT               = 179; // 盗まれカウント
    public const T_X2ChrStatId STAT_DROP_ITEM                 = 180; // 落とすアイテム
    public const T_X2ChrStatId STAT_DROP_ITEM_NUM             = 181; // 落とすアイテム数
    public const T_X2ChrStatId STAT_DROP_RARE_ITEM            = 182; // 落とすレアアイテム
    public const T_X2ChrStatId STAT_DROP_RARE_ITEM_NUM        = 183; // 落とすレアアイテム数
    public const T_X2ChrStatId STAT_STEAL_ITEM                = 184; // 盗めるアイテム
    public const T_X2ChrStatId STAT_STEAL_ITEM_NUM            = 185; // 盗めるアイテム数
    public const T_X2ChrStatId STAT_STEAL_RARE_ITEM           = 186; // 盗めるレアアイテム
    public const T_X2ChrStatId STAT_STEAL_RARE_ITEM_NUM       = 187; // 盗めるレアアイテム数
    public const T_X2ChrStatId STAT_BRIBERY_ITEM              = 188; // わいろアイテム
    public const T_X2ChrStatId STAT_BRIBERY_ITEM_NUM          = 189; // わいろアイテム数
    public const T_X2ChrStatId STAT_BRIBERY_RARE_ITEM         = 190; // わいろレアアイテム
    public const T_X2ChrStatId STAT_BRIBERY_RARE_ITEM_NUM     = 191; // わいろレアアイテム数
    public const T_X2ChrStatId STAT_APPEAR_COUNT              = 192; // 出現カウント
    public const T_X2ChrStatId STAT_ATTACK_NORMAL_FRAME       = 193; // 攻撃通常フレーム数
    public const T_X2ChrStatId STAT_MOTION_NUM                = 194; // モーション補間番号
    public const T_X2ChrStatId STAT_ATTACK_INC_SPEED          = 195; // 攻撃：加速％
    public const T_X2ChrStatId STAT_ATTACK_DEC_SPEED          = 196; // 攻撃：減速％
    public const T_X2ChrStatId STAT_ROUND                     = 197; // 通常方向フレーム
    public const T_X2ChrStatId STAT_DIRECTION_CHANGE_FLAG     = 198; // 方向変更フラグ
    public const T_X2ChrStatId STAT_DIRECTION_CHANGE_EFFECT   = 199; // 方向変更有効フラグ
    public const T_X2ChrStatId STAT_DIRECTION_FIX_FLAG        = 200; // 方向固定フラグ
    public const T_X2ChrStatId STAT_WIN_SE                    = 201; // 勝利のＳＥ
    public const T_X2ChrStatId STAT_EFFECT_HIT_NUM            = 202; // ヒットエフェクト番号
    public const T_X2ChrStatId STAT_MOTION_TYPE               = 203; // モーションタイプ
    public const T_X2ChrStatId STAT_ATTACK_MOTION_TYPE        = 204; // 攻撃モーションタイプ
    public const T_X2ChrStatId STAT_IDLE2_PROB                = 205; // アイドリング２確率
    public const T_X2ChrStatId STAT_HIDE                      = 206; // ハイド
    public const T_X2ChrStatId STAT_DISABLE_MOVE_FLAG         = 207; // 移動不可フラグ
    public const T_X2ChrStatId STAT_DISABLE_JUMP_FLAG         = 208; // ジャンプ不可フラグ
    public const T_X2ChrStatId STAT_BODYHIT_FLAG              = 209; // 体の当たり判定
    public const T_X2ChrStatId STAT_EFFECT_TARGET_FLAG        = 210; // エフェクトのターゲットフラグ
    public const T_X2ChrStatId STAT_DEATH_PATTERN             = 211; // 死にパターン
    public const T_X2ChrStatId STAT_DAMAGE_CHR                = 212; // ダメージを受けるキャラクター
    public const T_X2ChrStatId STAT_DAMAGE_HP                 = 213; // ＨＰダメージ
    public const T_X2ChrStatId STAT_DAMAGE_MP                 = 214; // ＭＰダメージ
    public const T_X2ChrStatId STAT_DAMAGE_ATB                = 215; // ＡＴＢダメージ
    public const T_X2ChrStatId STAT_CURSOR                    = 216; // カーソルフラグ
    public const T_X2ChrStatId STAT_CURSOR_ELEMENT            = 217; // カーソルエレメント
    public const T_X2ChrStatId STAT_VISIBLE                   = 218; // 表示フラグ
    public const T_X2ChrStatId STAT_VISIBLE_CAM               = 219; // カメラ用表示フラグ
    public const T_X2ChrStatId STAT_VISIBLE_EFF               = 220; // エフェクト用表示フラグ
    public const T_X2ChrStatId STAT_EFFVAR                    = 221; // エフェクト変数
    public const T_X2ChrStatId STAT_EFFLV                     = 222; // エフェクトレベル
    public const T_X2ChrStatId STAT_MOTIONLV                  = 223; // モーションレベル
    public const T_X2ChrStatId STAT_EXIST_FLAG                = 224; // 存在フラグ
    public const T_X2ChrStatId STAT_OWN_REACTION_AMOUNT       = 225; // 自分の指定キャラへのリアクションコマンドの数を調べる
    public const T_X2ChrStatId STAT_REACTION_AMOUNT           = 226; // 指定キャラのリアクションコマンドの数を調べる
    public const T_X2ChrStatId STAT_DISTANCE2D                = 227; // 距離XZ
    public const T_X2ChrStatId STAT_DISTANCE                  = 228; // 距離XYZ
    public const T_X2ChrStatId STAT_ATB_REST                  = 229; // 残りATB 値
    public const T_X2ChrStatId STAT_ATB_REST_SET              = 230; // 残りATB 設定値
    public const T_X2ChrStatId STAT_CHANT_REST                = 231; // 残り詠唱値
    public const T_X2ChrStatId STAT_CHANT_REST_SET            = 232; // 残り詠唱設定値
    public const T_X2ChrStatId STAT_CHANT_MAGIC               = 233; // 魔法中かどうかチェックする
    public const T_X2ChrStatId STAT_ACTION                    = 234; // 行動フラグ
    public const T_X2ChrStatId STAT_HP_LIST                   = 235; // ＨＰリスト表示
    public const T_X2ChrStatId STAT_APPEAR_MOTION_FLAG        = 236; // 出現モーションフラグ
    public const T_X2ChrStatId STAT_BLOW_EXIST_FLAG           = 237; // 吹き飛ばし＝存在フラグ
    public const T_X2ChrStatId STAT_ESCAPE_FLAG               = 238; // 逃げるフラグ
    public const T_X2ChrStatId STAT_WIN_POSE                  = 239; // 勝利のポーズを取るフラグ
    public const T_X2ChrStatId STAT_DEATH                     = 240; // 死亡
    public const T_X2ChrStatId STAT_DEATH_STONE               = 241; // 死亡か石化
    public const T_X2ChrStatId STAT_CAM_WIDTH                 = 242; // カメラの太さ
    public const T_X2ChrStatId STAT_CAM_HEIGHT                = 243; // カメラの高さ
    public const T_X2ChrStatId STAT_WIDTH                     = 244; // 幅
    public const T_X2ChrStatId STAT_HEIGHT                    = 245; // 高さ
    public const T_X2ChrStatId STAT_MOVE_START_MODE           = 246; // 移動開始モード
    public const T_X2ChrStatId STAT_MOVE_END_MODE             = 247; // 移動終了モード
    public const T_X2ChrStatId STAT_MOVE_END_DIST             = 248; // 移動終了距離
    public const T_X2ChrStatId STAT_MOVE_START_TARGET_BIT     = 249; // 移動開始のターゲットビット
    public const T_X2ChrStatId STAT_MOVE_END_TARGET_BIT       = 250; // 移動終了のターゲットビット
    public const T_X2ChrStatId STAT_JOIN                      = 251; // 仲間になっている判定
    public const T_X2ChrStatId STAT_NECK_TARGET_FLAG          = 252; // 首ターゲットなし
    public const T_X2ChrStatId STAT_CHAIN_COUNT               = 253; // 連鎖カウント
    public const T_X2ChrStatId STAT_BACKDAMAGE_FLAG           = 254; // 後ろからのダメージフラグ
    public const T_X2ChrStatId STAT_DEATH_STATUS              = 255; // 死亡ステータス
    public const T_X2ChrStatId STAT_TARGET_LIST               = 256; // ターゲットリストフラグ
    public const T_X2ChrStatId STAT_AUTO_CAMERA_FLAG          = 257; // 自動カメラターゲットに含めるフラグ
    public const T_X2ChrStatId STAT_AUTO_POS_FLAG             = 258; // 自動立ち位置に含めるフラグ
    public const T_X2ChrStatId STAT_WEAPON_FLAG               = 259; // 武器フラグ
    public const T_X2ChrStatId STAT_DIR_REVERSE_FLAG          = 260; // 次発行モーションで方向１８０度変更フラグ
    public const T_X2ChrStatId STAT_RETURN_FLAG               = 261; // 戻りフラグ：調教師用
    public const T_X2ChrStatId STAT_COMMAND_TYPE              = 262; // コマンドタイプ：モーションアンカー用
    public const T_X2ChrStatId STAT_ALIVE_NOT_STONE           = 263; // 生きていて石化でない
    public const T_X2ChrStatId STAT_WEAPON_ATTACH_FLAG        = 264; // 武器のアタッチ可能フラグ：調教師用
    public const T_X2ChrStatId STAT_BEFORE_JOB                = 265; // 変身前のジョブ番号
    public const T_X2ChrStatId STAT_AFTER_JOB                 = 266; // 変身後のジョブ番号
    public const T_X2ChrStatId STAT_EXE_COMMAND               = 267; // 最後に実行したコマンド
    public const T_X2ChrStatId STAT_ICON_NUMBER               = 268; // アイコン番号
    public const T_X2ChrStatId STAT_OVERSOUL                  = 269; // オーバーソウル状態かどうか
    public const T_X2ChrStatId STAT_OVERSOUL_TYPE             = 270; // オーバーソウルタイプ
    public const T_X2ChrStatId STAT_OVERSOUL_COUNT            = 271; // オーバーソウルカウント
    public const T_X2ChrStatId STAT_OVERSOUL_COUNT_MAX        = 272; // オーバーソウルカウント最大値
    public const T_X2ChrStatId STAT_OVERSOULED                = 273; // オーバーソウルしたことがあるフラグ
    public const T_X2ChrStatId STAT_HP_CHECK                  = 274; // ＨＰが満タンかチェック
    public const T_X2ChrStatId STAT_HP_HALF                   = 275; // ＨＰ1/2以下チェック
    public const T_X2ChrStatId STAT_HP_QUARTER                = 276; // ＨＰ1/4以下チェック
    public const T_X2ChrStatId STAT_MP_CHECK                  = 277; // ＭＰが満タンかチェック
    public const T_X2ChrStatId STAT_DANCING                   = 278; // 踊っているフラグ
    public const T_X2ChrStatId STAT_ON_CACHE_FLAG             = 279; // キャッシュに乗っているフラグ
    public const T_X2ChrStatId STAT_MENU_CANCEL_FLAG          = 280; // メニューでのキャンセル可能フラグ
    public const T_X2ChrStatId STAT_DRESS_UP_FLAG             = 281; // ドレスアップ可能フラグ
    public const T_X2ChrStatId ABILITY_LEAD                   = 282; // さきがけ
    public const T_X2ChrStatId ABILITY_FIRST                  = 283; // せんせい
    public const T_X2ChrStatId ABILITY_COUNTER                = 284; // カウンター
    public const T_X2ChrStatId ABILITY_COUNTER2               = 285; // カウンター２
    public const T_X2ChrStatId ABILITY_MAGIC_COUNTER          = 286; // 魔法カウンター
    public const T_X2ChrStatId ABILITY_BOOSTER                = 287; // 魔法ブースター:リレイズを除く
    public const T_X2ChrStatId ABILITY_MORE_ENCOUNT           = 288; // エンカウントを増やす
    public const T_X2ChrStatId ABILITY_MAGIC                  = 289; // 魔力剣
    public const T_X2ChrStatId ABILITY_MEDICINE               = 290; // くすりのちしき
    public const T_X2ChrStatId ABILITY_ELEMENT_MASTER         = 291; // ６属性の知識
    public const T_X2ChrStatId ABILITY_NON_ELEMENT_MASTER     = 292; // 無属性の知識
    public const T_X2ChrStatId ABILITY_STATUS_MASTER          = 293; // ST変化の知識
    public const T_X2ChrStatId ABILITY_AP_DOUBLE              = 294; // ＡＰ２倍:本人だけ
    public const T_X2ChrStatId ABILITY_AP_TRIPLE              = 295; // ＡＰ３倍:本人だけ
    public const T_X2ChrStatId ABILITY_HP_TOPPA               = 296; // ＨＰげんかいとっぱ
    public const T_X2ChrStatId ABILITY_MP_TOPPA               = 297; // ＭＰげんかいとっぱ
    public const T_X2ChrStatId ABILITY_DMG_TOPPA              = 298; // ダメージ限界突破
    public const T_X2ChrStatId ABILITY_RAREITEM_ONLY          = 299; // レアアイテムのみ
    public const T_X2ChrStatId ABILITY_DRAIN_SWORD            = 300; // ドレイン剣
    public const T_X2ChrStatId ABILITY_ASPIL_SWORD            = 301; // アスピル剣
    public const T_X2ChrStatId ABILITY_GILL_DOUBLE            = 302; // ギル２倍:３人つけると８倍
    public const T_X2ChrStatId ABILITY_ITEM_DOUBLE            = 303; // アイテム２倍:３人つけると８倍
    public const T_X2ChrStatId ABILITY_EXP_DOUBLE             = 304; // ＥＸＰ２倍:本人だけ
    public const T_X2ChrStatId ABILITY_AUTO_HP                = 305; // 自動ＨＰ回復
    public const T_X2ChrStatId ABILITY_AUTO_MP                = 306; // 自動ＭＰ回復
    public const T_X2ChrStatId ABILITY_PROBABILITY_UP         = 307; // 落とす確率アップ:３人つけるとさらにアップ
    public const T_X2ChrStatId ABILITY_REFLECT_PIERCE         = 308; // リフレク貫通
    public const T_X2ChrStatId ABILITY_HP_RECOVER             = 309; // 歩くとＨＰ回復
    public const T_X2ChrStatId ABILITY_MP_RECOVER             = 310; // 歩くとＭＰ回復
    public const T_X2ChrStatId ABILITY_NONENCOUNT             = 311; // エンカウントなし
    public const T_X2ChrStatId ABILITY_SHOOT_LV2              = 312; // 連射ＬＶ．２
    public const T_X2ChrStatId ABILITY_SHOOT_LV3              = 313; // 連射ＬＶ．３
    public const T_X2ChrStatId ABILITY_LIBRA_LV2              = 314; // みやぶるＬＶ２
    public const T_X2ChrStatId ABILITY_LIBRA_LV3              = 315; // みやぶるＬＶ３
    public const T_X2ChrStatId ABILITY_MP_HALF                = 316; // ＭＰ消費１／２
    public const T_X2ChrStatId ABILITY_MP_1                   = 317; // ＭＰ消費１
    public const T_X2ChrStatId STAT_TALK_STAT1                = 318; // 喋れる状態１
    public const T_X2ChrStatId STAT_TALK_STAT2                = 319; // 喋れる状態２
    public const T_X2ChrStatId STAT_TALK_STAT3                = 320; // 喋れる状態３
    public const T_X2ChrStatId STAT_TALK_STAT4                = 321; // 喋れる状態４
    public const T_X2ChrStatId STAT_SHELL_REFLECT             = 322; // シェルかリフレクがかかっている
    public const T_X2ChrStatId STAT_PROTESS_REFLECT           = 323; // プロテスかリフレクがかかっている
    public const T_X2ChrStatId STAT_HASTE_REFLECT             = 324; // ヘイストかリフレクがかかっている
    public const T_X2ChrStatId STAT_HIT_EFFECT_OFF_FLAG       = 325; // ２回ヒットエフェクトを出さないフラグ
    public const T_X2ChrStatId STAT_RAPID_SHOT_STATUS         = 326; // 速射ステータス
    public const T_X2ChrStatId STAT_FADEOUT                   = 327; // 外に出す時フェードアウト必要
    public const T_X2ChrStatId STAT_WEAK_MOTION               = 328; // 弱りモーションの取得
    public const T_X2ChrStatId STAT_SHADOW                    = 329; // 影フラグ
    public const T_X2ChrStatId STAT_DMG_DIR                   = 330; // ダメージ方向
    public const T_X2ChrStatId STAT_APPEAR_INVISIBLE_FLAG     = 331; // 出現時見えないフラグ
    public const T_X2ChrStatId STAT_MODEL                     = 332; // モデルフラグ
    public const T_X2ChrStatId STAT_INV_PHYSIC_MOTION         = 333; // 物理無効モーションフラグ
    public const T_X2ChrStatId STAT_INV_MAGIC_MOTION          = 334; // 魔法無効モーションフラグ
    public const T_X2ChrStatId STAT_VIGOR                     = 335; // 元気状態を得る
    public const T_X2ChrStatId STAT_SOUND_HIT_NUM_CRITICAL    = 336; // クリティカルヒットＳＥ番号
    public const T_X2ChrStatId STAT_MAGIC_EFFECT_GROUND       = 337; // 地上：魔法エフェクト番号
    public const T_X2ChrStatId STAT_MAGIC_EFFECT_WATER        = 338; // 水中：魔法エフェクト番号
    public const T_X2ChrStatId STAT_INFO_MES_ID               = 339; // 情報メッセージＩＤ
    public const T_X2ChrStatId STAT_LIVE_MES_ID               = 340; // ライブラメッセージＩＤ
    public const T_X2ChrStatId STAT_MOTION_SPEED_NORMAL       = 341; // 通常モーションスピード
    public const T_X2ChrStatId STAT_MOTION_SPEED_NORMAL_START = 342; // 通常モーションスピード：モーション開始時
    public const T_X2ChrStatId STAT_COMMAND_SET               = 343; // コマンド設定可能状態
    public const T_X2ChrStatId STAT_SOUND_HIT_NUM             = 344; // ヒットＳＥ番号
    public const T_X2ChrStatId STAT_DAMAGE_NUM_POS            = 345; // ダメージ数値位置
    public const T_X2ChrStatId STAT_MOTION_TYPE_RESET         = 346; // モーションタイプリセット
    public const T_X2ChrStatId STAT_MOTION_TYPE_ADD           = 347; // モーションタイプ追加
    public const T_X2ChrStatId STAT_SAME_TARGET_CHECK         = 348; // 同じターゲットチェック
    public const T_X2ChrStatId STAT_BODYHIT_DIRECT            = 349; // 直接ボディヒット設定
    public const T_X2ChrStatId STAT_NUM_PRINT_ELEMENT         = 350; // 番号表示エレメント
    public const T_X2ChrStatId STAT_MOTION_TYPE_MONSTER       = 351; // モンスターモーションタイプ
    public const T_X2ChrStatId STAT_PLAYER_NAME               = 352; // プレイヤーネームフラグ
    public const T_X2ChrStatId STAT_DIST                      = 353; // 遠距離、近距離フラグ
    public const T_X2ChrStatId STAT_SPECIAL_JOB               = 354; // 究極着替えフラグ
    public const T_X2ChrStatId STAT_TITLE_POS                 = 355; // タイトル位置
    public const T_X2ChrStatId STAT_LEVEL                     = 356; // レベル
    public const T_X2ChrStatId STAT_LEVEL_MAX                 = 357; // レベル最大値
    public const T_X2ChrStatId STAT_NO_DAMAGE_EXE_FLAG        = 358; // タグ実行中ダメージなしフラグ
    public const T_X2ChrStatId STAT_CHANGE_MOTION_NUM         = 359; // 着替えモーション番号
    public const T_X2ChrStatId STAT_FRIEND_MONSTER            = 360; // 仲間モンスター
    public const T_X2ChrStatId STAT_INBATTLE_PLAYER           = 361; // 指定プレイヤーキャラが捕獲モンスターでなくバトルに参加している
    public const T_X2ChrStatId STAT_WEAK_LEVEL_MASK           = 362; // 弱りマスクの設定
    public const T_X2ChrStatId STAT_DEATH_PATTERN_FRIEND      = 363; // 死にパターン：捕獲モンスター
    public const T_X2ChrStatId STAT_MOTION_IDLE_TYPE          = 364; // アイドリングモーションタイプ
}
